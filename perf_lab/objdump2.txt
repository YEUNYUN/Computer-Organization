
kernels.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <naive_normalize>:
   0:	f3 0f 1e fa          	endbr64
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d dc             	mov    %edi,-0x24(%rbp)
   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  17:	f3 0f 10 00          	movss  (%rax),%xmm0
  1b:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
  20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  24:	f3 0f 10 00          	movss  (%rax),%xmm0
  28:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
  2d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  34:	e9 c6 00 00 00       	jmp    ff <naive_normalize+0xff>
  39:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40:	e9 aa 00 00 00       	jmp    ef <naive_normalize+0xef>
  45:	8b 45 f0             	mov    -0x10(%rbp),%eax
  48:	0f af 45 dc          	imul   -0x24(%rbp),%eax
  4c:	89 c2                	mov    %eax,%edx
  4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  51:	01 d0                	add    %edx,%eax
  53:	48 98                	cltq
  55:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  5c:	00 
  5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  61:	48 01 d0             	add    %rdx,%rax
  64:	f3 0f 10 08          	movss  (%rax),%xmm1
  68:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
  6d:	0f 2f c1             	comiss %xmm1,%xmm0
  70:	76 28                	jbe    9a <naive_normalize+0x9a>
  72:	8b 45 f0             	mov    -0x10(%rbp),%eax
  75:	0f af 45 dc          	imul   -0x24(%rbp),%eax
  79:	89 c2                	mov    %eax,%edx
  7b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  7e:	01 d0                	add    %edx,%eax
  80:	48 98                	cltq
  82:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  89:	00 
  8a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  8e:	48 01 d0             	add    %rdx,%rax
  91:	f3 0f 10 00          	movss  (%rax),%xmm0
  95:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
  9a:	8b 45 f0             	mov    -0x10(%rbp),%eax
  9d:	0f af 45 dc          	imul   -0x24(%rbp),%eax
  a1:	89 c2                	mov    %eax,%edx
  a3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  a6:	01 d0                	add    %edx,%eax
  a8:	48 98                	cltq
  aa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  b1:	00 
  b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  b6:	48 01 d0             	add    %rdx,%rax
  b9:	f3 0f 10 00          	movss  (%rax),%xmm0
  bd:	0f 2f 45 ec          	comiss -0x14(%rbp),%xmm0
  c1:	76 28                	jbe    eb <naive_normalize+0xeb>
  c3:	8b 45 f0             	mov    -0x10(%rbp),%eax
  c6:	0f af 45 dc          	imul   -0x24(%rbp),%eax
  ca:	89 c2                	mov    %eax,%edx
  cc:	8b 45 f4             	mov    -0xc(%rbp),%eax
  cf:	01 d0                	add    %edx,%eax
  d1:	48 98                	cltq
  d3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  da:	00 
  db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  df:	48 01 d0             	add    %rdx,%rax
  e2:	f3 0f 10 00          	movss  (%rax),%xmm0
  e6:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
  eb:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ef:	8b 45 f4             	mov    -0xc(%rbp),%eax
  f2:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  f5:	0f 8c 4a ff ff ff    	jl     45 <naive_normalize+0x45>
  fb:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  ff:	8b 45 f0             	mov    -0x10(%rbp),%eax
 102:	3b 45 dc             	cmp    -0x24(%rbp),%eax
 105:	0f 8c 2e ff ff ff    	jl     39 <naive_normalize+0x39>
 10b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 112:	eb 72                	jmp    186 <naive_normalize+0x186>
 114:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 11b:	eb 5d                	jmp    17a <naive_normalize+0x17a>
 11d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 120:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 124:	89 c2                	mov    %eax,%edx
 126:	8b 45 fc             	mov    -0x4(%rbp),%eax
 129:	01 d0                	add    %edx,%eax
 12b:	48 98                	cltq
 12d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 134:	00 
 135:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 139:	48 01 d0             	add    %rdx,%rax
 13c:	f3 0f 10 00          	movss  (%rax),%xmm0
 140:	f3 0f 5c 45 e8       	subss  -0x18(%rbp),%xmm0
 145:	f3 0f 10 4d ec       	movss  -0x14(%rbp),%xmm1
 14a:	f3 0f 5c 4d e8       	subss  -0x18(%rbp),%xmm1
 14f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 152:	0f af 45 dc          	imul   -0x24(%rbp),%eax
 156:	89 c2                	mov    %eax,%edx
 158:	8b 45 fc             	mov    -0x4(%rbp),%eax
 15b:	01 d0                	add    %edx,%eax
 15d:	48 98                	cltq
 15f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 166:	00 
 167:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 16b:	48 01 d0             	add    %rdx,%rax
 16e:	f3 0f 5e c1          	divss  %xmm1,%xmm0
 172:	f3 0f 11 00          	movss  %xmm0,(%rax)
 176:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 17a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 17d:	3b 45 dc             	cmp    -0x24(%rbp),%eax
 180:	7c 9b                	jl     11d <naive_normalize+0x11d>
 182:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 186:	8b 45 f8             	mov    -0x8(%rbp),%eax
 189:	3b 45 dc             	cmp    -0x24(%rbp),%eax
 18c:	7c 86                	jl     114 <naive_normalize+0x114>
 18e:	90                   	nop
 18f:	90                   	nop
 190:	5d                   	pop    %rbp
 191:	c3                   	ret

0000000000000192 <normalize>:
 192:	f3 0f 1e fa          	endbr64
 196:	55                   	push   %rbp
 197:	48 89 e5             	mov    %rsp,%rbp
 19a:	48 83 ec 18          	sub    $0x18,%rsp
 19e:	89 7d fc             	mov    %edi,-0x4(%rbp)
 1a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 1a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 1a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 1b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
 1b4:	48 89 ce             	mov    %rcx,%rsi
 1b7:	89 c7                	mov    %eax,%edi
 1b9:	e8 00 00 00 00       	call   1be <normalize+0x2c>
 1be:	90                   	nop
 1bf:	c9                   	leave
 1c0:	c3                   	ret

00000000000001c1 <register_normalize_functions>:
 1c1:	f3 0f 1e fa          	endbr64
 1c5:	55                   	push   %rbp
 1c6:	48 89 e5             	mov    %rsp,%rbp
 1c9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1d0 <register_normalize_functions+0xf>
 1d0:	48 89 c6             	mov    %rax,%rsi
 1d3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1da <register_normalize_functions+0x19>
 1da:	48 89 c7             	mov    %rax,%rdi
 1dd:	e8 00 00 00 00       	call   1e2 <register_normalize_functions+0x21>
 1e2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e9 <register_normalize_functions+0x28>
 1e9:	48 89 c6             	mov    %rax,%rsi
 1ec:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f3 <register_normalize_functions+0x32>
 1f3:	48 89 c7             	mov    %rax,%rdi
 1f6:	e8 00 00 00 00       	call   1fb <register_normalize_functions+0x3a>
 1fb:	90                   	nop
 1fc:	5d                   	pop    %rbp
 1fd:	c3                   	ret

00000000000001fe <naive_kronecker_product>:
 1fe:	f3 0f 1e fa          	endbr64
 202:	55                   	push   %rbp
 203:	48 89 e5             	mov    %rsp,%rbp
 206:	89 7d ec             	mov    %edi,-0x14(%rbp)
 209:	89 75 e8             	mov    %esi,-0x18(%rbp)
 20c:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 210:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 214:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
 218:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 21f:	e9 df 00 00 00       	jmp    303 <naive_kronecker_product+0x105>
 224:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 22b:	e9 c3 00 00 00       	jmp    2f3 <naive_kronecker_product+0xf5>
 230:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 237:	e9 a7 00 00 00       	jmp    2e3 <naive_kronecker_product+0xe5>
 23c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 243:	e9 8b 00 00 00       	jmp    2d3 <naive_kronecker_product+0xd5>
 248:	8b 45 f0             	mov    -0x10(%rbp),%eax
 24b:	0f af 45 ec          	imul   -0x14(%rbp),%eax
 24f:	89 c2                	mov    %eax,%edx
 251:	8b 45 f4             	mov    -0xc(%rbp),%eax
 254:	01 d0                	add    %edx,%eax
 256:	48 98                	cltq
 258:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 25f:	00 
 260:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 264:	48 01 d0             	add    %rdx,%rax
 267:	f3 0f 10 08          	movss  (%rax),%xmm1
 26b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 26e:	0f af 45 e8          	imul   -0x18(%rbp),%eax
 272:	89 c2                	mov    %eax,%edx
 274:	8b 45 fc             	mov    -0x4(%rbp),%eax
 277:	01 d0                	add    %edx,%eax
 279:	48 98                	cltq
 27b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 282:	00 
 283:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 287:	48 01 d0             	add    %rdx,%rax
 28a:	f3 0f 10 00          	movss  (%rax),%xmm0
 28e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 291:	0f af 45 e8          	imul   -0x18(%rbp),%eax
 295:	89 c2                	mov    %eax,%edx
 297:	8b 45 f8             	mov    -0x8(%rbp),%eax
 29a:	01 c2                	add    %eax,%edx
 29c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 29f:	0f af 45 e8          	imul   -0x18(%rbp),%eax
 2a3:	0f af d0             	imul   %eax,%edx
 2a6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 2a9:	0f af 45 e8          	imul   -0x18(%rbp),%eax
 2ad:	89 c1                	mov    %eax,%ecx
 2af:	8b 45 fc             	mov    -0x4(%rbp),%eax
 2b2:	01 c8                	add    %ecx,%eax
 2b4:	01 d0                	add    %edx,%eax
 2b6:	48 98                	cltq
 2b8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 2bf:	00 
 2c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 2c4:	48 01 d0             	add    %rdx,%rax
 2c7:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
 2cb:	f3 0f 11 00          	movss  %xmm0,(%rax)
 2cf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 2d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
 2d6:	3b 45 e8             	cmp    -0x18(%rbp),%eax
 2d9:	0f 8c 69 ff ff ff    	jl     248 <naive_kronecker_product+0x4a>
 2df:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 2e3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 2e6:	3b 45 e8             	cmp    -0x18(%rbp),%eax
 2e9:	0f 8c 4d ff ff ff    	jl     23c <naive_kronecker_product+0x3e>
 2ef:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 2f3:	8b 45 f4             	mov    -0xc(%rbp),%eax
 2f6:	3b 45 ec             	cmp    -0x14(%rbp),%eax
 2f9:	0f 8c 31 ff ff ff    	jl     230 <naive_kronecker_product+0x32>
 2ff:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 303:	8b 45 f0             	mov    -0x10(%rbp),%eax
 306:	3b 45 ec             	cmp    -0x14(%rbp),%eax
 309:	0f 8c 15 ff ff ff    	jl     224 <naive_kronecker_product+0x26>
 30f:	90                   	nop
 310:	90                   	nop
 311:	5d                   	pop    %rbp
 312:	c3                   	ret

0000000000000313 <kronecker_product>:
 313:	f3 0f 1e fa          	endbr64
 317:	55                   	push   %rbp
 318:	48 89 e5             	mov    %rsp,%rbp
 31b:	48 83 ec 20          	sub    $0x20,%rsp
 31f:	89 7d fc             	mov    %edi,-0x4(%rbp)
 322:	89 75 f8             	mov    %esi,-0x8(%rbp)
 325:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 329:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 32d:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
 331:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
 335:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 339:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33d:	8b 75 f8             	mov    -0x8(%rbp),%esi
 340:	8b 45 fc             	mov    -0x4(%rbp),%eax
 343:	49 89 f8             	mov    %rdi,%r8
 346:	89 c7                	mov    %eax,%edi
 348:	e8 00 00 00 00       	call   34d <kronecker_product+0x3a>
 34d:	90                   	nop
 34e:	c9                   	leave
 34f:	c3                   	ret

0000000000000350 <register_kronecker_product_functions>:
 350:	f3 0f 1e fa          	endbr64
 354:	55                   	push   %rbp
 355:	48 89 e5             	mov    %rsp,%rbp
 358:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 35f <register_kronecker_product_functions+0xf>
 35f:	48 89 c6             	mov    %rax,%rsi
 362:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 369 <register_kronecker_product_functions+0x19>
 369:	48 89 c7             	mov    %rax,%rdi
 36c:	e8 00 00 00 00       	call   371 <register_kronecker_product_functions+0x21>
 371:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 378 <register_kronecker_product_functions+0x28>
 378:	48 89 c6             	mov    %rax,%rsi
 37b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 382 <register_kronecker_product_functions+0x32>
 382:	48 89 c7             	mov    %rax,%rdi
 385:	e8 00 00 00 00       	call   38a <register_kronecker_product_functions+0x3a>
 38a:	90                   	nop
 38b:	5d                   	pop    %rbp
 38c:	c3                   	ret
